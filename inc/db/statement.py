statement = {
    'mysql': {
        'SELECT_STATEMENT': "SELECT {columns} FROM {table}",
        'DELETE_STATEMENT': "DELETE  FROM {table}",
        'WHERE_STATEMENT': " WHERE {condition} {operator} %s",
        'AND_WHERE_STATEMENT': " AND {condition} {operator} %s",
        'OR_STATEMENT': " OR {condition} {operator} %s",
        'BETWEEN_STATEMENT': " WHERE {column} BETWEEN %s AND %s",
        'AND_BETWEEN_STATEMENT': " AND {column} BETWEEN %s AND %s",
        'INSERT_STATEMENT': "INSERT  INTO {table} ({columns}) values({placeholder})",
        'UPDATE_STATEMENT': "update {table} set {columns}",
        'ORDERBY_STATEMENT': " ORDER BY {column} {how}",
        'GROUPBY_STATEMENT': " GROUP BY {column} ",
        'AND_GROUPBY_STATEMENT': " , {column} ",
        'HASMaNY_STATEMENT': " join {foreign_table} on {local_table}.id = {on}",
        'BLONGSTO_STATEMENT': " join {foreign_table} on {local_key} = {foreign_key}",
        'JOIN_STATEMENT': " {type} JOIN {foreign_table}",
        'ON_JOIN_STATEMENT': " ON {local_key} = {foreign_key}",
        'LIMIT': ' limit {count}',
        'OFFSET': " OFFSET {count}",
        'COUNT': "SELECT COUNT({columns}) FROM {table}",
        'SUM': "SELECT SUM({columns}) FROM {table}",
    },
    'sqlite': {
        'SELECT_STATEMENT': "SELECT {columns} FROM {table}",
        'DELETE_STATEMENT': "DELETE  FROM {table}",
        'WHERE_STATEMENT': " WHERE {condition} {operator} %s",
        'AND_WHERE_STATEMENT': " AND {condition} {operator} %s",
        'OR_STATEMENT': " OR {condition} {operator} %s",
        'BETWEEN_STATEMENT': " WHERE {column} BETWEEN %s AND %s",
        'AND_BETWEEN_STATEMENT': " AND {column} BETWEEN %s AND %s",
        'INSERT_STATEMENT': "INSERT  INTO {table} ({columns}) values({placeholder})",
        'UPDATE_STATEMENT': "update {table} set {columns}",
        'ORDERBY_STATEMENT': " ORDER BY {column} {how}",
        'GROUPBY_STATEMENT': " GROUP BY {column} ",
        'AND_GROUPBY_STATEMENT': " , {column} ",
        'HASMaNY_STATEMENT': " join {foreign_table} on {local_table}.id = {on}",
        'BLONGSTO_STATEMENT': " join {foreign_table} on {local_key} = {foreign_key}",
        'JOIN_STATEMENT': " {type} JOIN {foreign_table}",
        'ON_JOIN_STATEMENT': " ON {local_key} = {foreign_key}",
        'LIMIT': ' limit {count}',
    }
}
